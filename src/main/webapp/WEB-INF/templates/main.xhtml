<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets" xml:lang="en">

<h:head>
    <title>Weather Application</title>
    <h:outputStylesheet library="css" name="style.css" />
    <h:outputScript library="js" name="mainJs.js" />

    <style>
        #page {
            width: 100%;
            height: 100vh;
            /* Set the height to 100% of the viewport height */
            display: flex;
            flex-direction: column;
            justify-content: center;
            /* Center vertically */
            align-items: center;
            /* Center horizontally */

        }

        #header,
        #footer {
            width: 100%;
            height: 100px;

        }

        #content {
            width: 100%;
            flex-grow: 1;
            /* Allow content to grow and take available space */
            display: flex;
            justify-content: center;
            align-items: center;


        }

        @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900;display=swap;");



        .container {
            position: relative;
            width: 400px;
            height: 110px;
            background: rgba(255, 255, 255, .1);
            backdrop-filter: blur(40px);
            border: 2px solid rgba(255, 255, 255, .2);
            border-radius: 16px;
            padding: 20px;
            transition: height .5s ease;
        }

        .search-box {
            position: relative;
            width: 100%;
            height: 55px;
            display: flex;
            align-items: center;
        }

        .search-box i {
            position: absolute;
            left: 10px;
            font-size: 28px;
            color: white;

        }

        .search-box input {
            position: absolute;
            width: 100%;
            height: 100%;
            background: transparent;
            border: 2px solid rgba(255, 255, 255, .2);
            outline: none;
            border-radius: 10px;
            font-size: 22px;
            color: #fff;
            font-weight: 500;
            text-transform: uppercase;
            padding: 0 48px 0 42px;
        }

        .search-box input::placeholder {
            color: #fff;
            text-transform: capitalize;
        }

        .search-box button {
            position: absolute;
            right: 0;
            width: 40px;
            height: 100%;
            background: transparent;
            border: none;
            outline: none;
            font-size: 28px;
            color: #fff;
            padding: 0 40px 0 5px;
            cursor: pointer;
        }

        .weather-box {
            text-align: center;
            color: white;
            margin: 40px 0;
        }

        .weather-box,
        .weather-details,
        .not-found {
            visibility: hidden;
        }

        .weather-box.active,
        .weather-details.active,
        .not-found.active {
            visibility: visible;
        }

        .weather-box img {
            width: 50%;
        }

        .weather-box .temparature {
            position: relative;
            font-size: 60px;
            line-height: 1;
            font-weight: 650;
            margin: 20px 0 6px -30px;
        }

        weather-box .temparature span {
            position: absolute;
            font-size: 22px;
            margin-left: 4px;

        }

        .weather-box .descpription {
            font-size: 22px;
            font-weight: 480;
            text-transform: capitalize;
        }

        .weather-details {
            position: absolute;
            bottom: 40px;
            left: 0;
            width: 100%;
            padding: 0 20px;
            display: flex;
            color: white;
        }

        .weather-details .humidity,
        .weather-details .wind {
            display: flex;
            align-items: center;
            width: 50%;
        }

        .weather-details .humidity {
            padding-left: 20px;
            justify-content: flex-start;
        }

        .weather-details .wind {
            padding-right: 20px;
            justify-content: flex-end;
        }

        .weather-details i {
            font-size: 56px;
            margin-right: 10px;
        }

        .weather-details span {
            display: inline-block;
            font-size: 22px;
            font-weight: 500;
        }

        .weather-details p {
            font-size: 12px;
            font-weight: 500;

        }

        .not-found {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            text-align: center;
            color: white;
            margin-top: 100px;
        }

        .not-found img {
            width: 60%;
        }

        .not-found p {
            font-size: 20px;
            font-weight: 500;
            margin-top: 16px;
        }
    </style>
</h:head>

<h:body style="margin: 0;">

    <div id="page" style="background-image: url(resources/img/background.jpg);">

        <div id="header">
            <ui:include src="/WEB-INF/includes/header.xhtml" />
        </div>

        <div id="content">
            <ui:insert name="content">Content</ui:insert>
        </div>

        <div id="footer">
            <ui:include src="/WEB-INF/includes/footer.xhtml" />
        </div>

    </div>

</h:body>
<script>
    const container = document.querySelector('.container');
    const search = document.querySelector('.search-box button');
    const weatherBox = document.querySelector('.weather-box');
    const weatherDetails = document.querySelector('.weather-details');
    const error = document.querySelector('.not-found');

    search.addEventListener('click', () => {
        const APIKey = '0f8a2c84a2e5cc4ce0cf246ecafba424';
        const city = document.querySelector('.search-box input').value;
        if (city === '') return;

        fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&amp;units=metric&amp;appid=' + APIKey)
            .then(response => response.json())
            .then(json => {
                if (json.cod == '404') {
                    container.style.height = '400px';
                    weatherBox.classList.remove('active');
                    weatherDetails.classList.remove('active');
                    error.classList.add('active');
                    return;
                }
                container.style.height = '550px';
                weatherBox.classList.add('active');
                weatherDetails.classList.add('active');
                error.classList.remove('active');

                const image = document.querySelector('.weather-box img');
                const temperature = document.querySelector('.weather-box .temparature');
                const description = document.querySelector('.weather-box .descpription');
                const humidity = document.querySelector('.weather-details .humidity span');
                const wind = document.querySelector('.weather-details .wind span');

                switch (json.weather[0].main) {
                    case 'Clear':
                        image.src = 'resources/img/clear.png';
                        break;
                    case 'Rain':
                        image.src = 'resources/img/rain.png';
                        break;
                    case 'Snow':
                        image.src = 'resources/img/snow.png';
                        break;
                    case 'Mist':
                        image.src = 'resources/img/mist.png';
                        break;
                    case 'Clouds':
                        image.src = 'resources/img/cloudy.png';
                        break;
                    default:
                        image.src = 'resources/img/clear.png';
                        break;
                }

                temperature.innerHTML = json.main.temp + '<span>Â°C</span>';
                description.innerHTML = json.weather[0].description;
                humidity.innerHTML = json.main.humidity + '%';
                wind.innerHTML = json.wind.speed + 'Km/h';
            });
    });


</script>

</html>